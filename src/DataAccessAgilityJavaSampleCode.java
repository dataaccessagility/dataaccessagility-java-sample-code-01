import dataaccessobjects.ConnectionProvider;
import dataaccessobjects.DivisionData;
import dataaccessobjects.EmployeeData;
import models.Division;
import models.Employee;

import java.math.BigDecimal;
import java.util.Date;
import java.util.Random;

public class DataAccessAgilityJavaSampleCode {
    public static void main(String[] args) {

        try {
            //Make sure to download and reference the MySql JDBC Driver
            Class.forName("com.mysql.cj.jdbc.Driver");

            //ConnectionProvider is a class that is auto generated by DataAccessAgility
            //Make sure to specify the database host, name, username, and password
            ConnectionProvider.setParameters("jdbc:mysql://DATABASE_HOST?allowMultiQueries=true", "db_username", "db_password", 2, 3600);

            Random random = new Random(new Date().getTime());
            //
            //Add Division object to database
            //
            Division division = new Division();

            division.setId(random.nextInt(100000));
            division.setName("Sales");

            DivisionData.addDivision(division); //DivisionData is the data access object of Division table

            //
            //Delete any existing employee with id 1200
            //
            EmployeeData.deleteEmployeeById(1200);

            //
            //Add Employee object to database
            //
            Employee employee = new Employee();

            employee.setId(1200);
            employee.setNumber("abc123");
            employee.setFullName("John Smith");
            employee.setGender(random.nextInt(2) + 1);
            employee.setHiringDate(new Date());
            employee.setStatus(random.nextInt(3) + 1);
            employee.setType(random.nextInt(4) + 1);
            employee.setSalary(new BigDecimal(random.nextInt(4000) + 1000));
            employee.setDivisionId(random.nextInt(50) + 1);
            employee.setLatestCheckInDateTime(new Date());

            EmployeeData.addEmployee(employee); //EmployeeData is the data access object of Employee table

            //Increase Employee Salary by 20%
            EmployeeData.updateEmployeeSalaryById(new BigDecimal( employee.getSalary().doubleValue() * 1.2), employee.getId());

            //
            //Get Employee object from database
            //
            Employee storedEmployee = EmployeeData.getEmployeeById(employee.getId());

            System.out.println("******* Employee Card *******");
            System.out.println(storedEmployee.getId());
            System.out.println(storedEmployee.getFullName());
            System.out.println(storedEmployee.getHiringDate());
            System.out.println(storedEmployee.getSalary());
            System.out.println("******* Employee Card End *******");
        }
        catch (Exception ex) {
            System.out.println("Error: " + ex.getMessage());
            ex.printStackTrace();
        }
    }
}
